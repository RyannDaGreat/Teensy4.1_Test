Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.

Press any key to enter the REPL. Use CTRL-D to reload.soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> 
>>> 
>>> 
>>> 
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Traceback (most recent call last):
  File "<stdin>", line 6, in <module>
  File "/lib/adafruit_pcd8544.py", line 48, in <module>
ImportError: no module named 'adafruit_bus_device'
>>> 
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> 
>>> 
>>> 
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> 
>>> 
>>> 
>>> 
>>> 
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> 
>>> 
>>> 
>>> 
>>> 
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Traceback (most recent call last):
  File "<stdin>", line 6, in <module>
  File "/lib/adafruit_pcd8544.py", line 53, in <module>
ImportError: no module named 'adafruit_framebuf'
>>> 
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> 
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> 
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> a[K
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Pixel test
Lines test
Rectangle test
Text test
Could not find font file font5x8.bin
Traceback (most recent call last):
  File "<stdin>", line 66, in <module>
  File "lib/adafruit_framebuf.py", line 415, in text
  File "lib/adafruit_framebuf.py", line 497, in __init__
  File "lib/adafruit_framebuf.py", line 490, in __init__
OSError: [Errno 2] No such file/directory: 'font5x8.bin'
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Traceback (most recent call last):
  File "<stdin>", line 9, in <module>
ValueError: D13 in use
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
=== 
=== 
Traceback (most recent call last):
  File "<stdin>", line 9, in <module>
ValueError: D13 in use
>>> 
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Pixel test
Lines test
Rectangle test
Text test
Could not find font file font5x8.bin
Traceback (most recent call last):
  File "<stdin>", line 66, in <module>
  File "lib/adafruit_framebuf.py", line 415, in text
  File "lib/adafruit_framebuf.py", line 497, in __init__
  File "lib/adafruit_framebuf.py", line 490, in __init__
OSError: [Errno 2] No such file/directory: 'font5x8.bin'
>>> 
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Pixel test
Lines test
Rectangle test
Text test
Could not find font file font5x8.bin
Traceback (most recent call last):
  File "<stdin>", line 66, in <module>
  File "lib/adafruit_framebuf.py", line 415, in text
  File "lib/adafruit_framebuf.py", line 497, in __init__
  File "lib/adafruit_framebuf.py", line 490, in __init__
OSError: [Errno 2] No such file/directory: 'font5x8.bin'
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Traceback (most recent call last):
  File "<stdin>", line 9, in <module>
ValueError: D13 in use
>>> 
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Pixel test
Lines test
Rectangle test
Text test
Could not find font file font5x8.bin
Traceback (most recent call last):
  File "<stdin>", line 66, in <module>
  File "lib/adafruit_framebuf.py", line 415, in text
  File "lib/adafruit_framebuf.py", line 497, in __init__
  File "lib/adafruit_framebuf.py", line 490, in __init__
OSError: [Errno 2] No such file/directory: 'font5x8.bin'
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Traceback (most recent call last):
  File "<stdin>", line 9, in <module>
ValueError: D13 in use
>>> 
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Pixel test
Lines test
Rectangle test
Text test
Could not find font file font5x8.bin
Traceback (most recent call last):
  File "<stdin>", line 66, in <module>
  File "lib/adafruit_framebuf.py", line 415, in text
  File "lib/adafruit_framebuf.py", line 497, in __init__
  File "lib/adafruit_framebuf.py", line 490, in __init__
OSError: [Errno 2] No such file/directory: 'font5x8.bin'
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Traceback (most recent call last):
  File "<stdin>", line 9, in <module>
ValueError: D13 in use
>>> 
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Pixel test
Lines test
Rectangle test
Text test
Could not find font file font5x8.bin
Traceback (most recent call last):
  File "<stdin>", line 66, in <module>
  File "lib/adafruit_framebuf.py", line 415, in text
  File "lib/adafruit_framebuf.py", line 497, in __init__
  File "lib/adafruit_framebuf.py", line 490, in __init__
OSError: [Errno 2] No such file/directory: 'font5x8.bin'
>>> 
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
===  import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Traceback (most recent call last):
  File "<stdin>", line 1
IndentationError: unexpected indent
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Pixel test
Lines test
Rectangle test
Text test
Could not find font file font5x8.bin
Traceback (most recent call last):
  File "<stdin>", line 66, in <module>
  File "lib/adafruit_framebuf.py", line 415, in text
  File "lib/adafruit_framebuf.py", line 497, in __init__
  File "lib/adafruit_framebuf.py", line 490, in __init__
OSError: [Errno 2] No such file/directory: 'font5x8.bin'
>>> 
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Pixel test
Lines test
Rectangle test
Text test
Traceback (most recent call last):
  File "<stdin>", line 77, in <module>
KeyboardInterrupt: 
>>> 
>>> 
>>> 
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Traceback (most recent call last):
  File "<stdin>", line 9, in <module>
ValueError: D13 in use
>>> 
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Pixel test
Lines test
Rectangle test
Text test
Traceback (most recent call last):
  File "<stdin>", line 77, in <module>
KeyboardInterrupt: 
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Traceback (most recent call last):
  File "<stdin>", line 9, in <module>
ValueError: D13 in use
>>> 
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Pixel test
Lines test
Rectangle test
Text test
Traceback (most recent call last):
  File "<stdin>", line 77, in <module>
KeyboardInterrupt: 
>>> 
>>> 
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Pixel test
Lines test
Rectangle test
Text test
Traceback (most recent call last):
  File "<stdin>", line 79, in <module>
KeyboardInterrupt: 
>>> 
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Pixel test
Lines test
Rectangle test
Text test
Traceback (most recent call last):
  File "<stdin>", line 77, in <module>
KeyboardInterrupt: 
>>> 
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Pixel test
Lines test
Rectangle test
Text test
Traceback (most recent call last):
  File "<stdin>", line 79, in <module>
KeyboardInterrupt: 
>>> 
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:

Press any key to enter the REPL. Use CTRL-D to reload.
Adafruit CircuitPython 6.0.0-rc.2 on 2020-11-12; Teensy 4.0 with IMXRT1062DVJ6A
>>> 
paste mode; Ctrl-C to cancel, Ctrl-D to finish
=== import time
=== import board
=== import busio
=== import digitalio
=== 
=== import adafruit_pcd8544
=== 
=== # Initialize SPI bus and control pins
=== spi = busio.SPI(board.SCK, MOSI=board.MOSI)
=== dc = digitalio.DigitalInOut(board.D6)  # data/command
=== cs = digitalio.DigitalInOut(board.D5)  # Chip select
=== reset = digitalio.DigitalInOut(board.D9)  # reset
=== 
=== display = adafruit_pcd8544.PCD8544(spi, dc, cs, reset)
=== 
=== display.bias = 4
=== display.contrast = 60
=== 
=== # Turn on the Backlight LED
=== backlight = digitalio.DigitalInOut(board.D10)  # backlight
=== backlight.switch_to_output()
=== backlight.value = True
=== 
=== print("Pixel test")
=== # Clear the display.  Always call show after changing pixels to make the display
=== # update visible!
=== display.fill(0)
=== display.show()
=== 
=== # Set a pixel in the origin 0,0 position.
=== display.pixel(0, 0, 1)
=== # Set a pixel in the middle position.
=== display.pixel(display.width // 2, display.height // 2, 1)
=== # Set a pixel in the opposite corner position.
=== display.pixel(display.width - 1, display.height - 1, 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Lines test")
=== # we'll draw from corner to corner, lets define all the pair coordinates here
=== corners = (
===     (0, 0),
===     (0, display.height - 1),
===     (display.width - 1, 0),
===     (display.width - 1, display.height - 1),
=== )
=== 
=== display.fill(0)
=== for corner_from in corners:
===     for corner_to in corners:
===         display.line(corner_from[0], corner_from[1], corner_to[0], corner_to[1], 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Rectangle test")
=== display.fill(0)
=== w_delta = display.width / 10
=== h_delta = display.height / 10
=== for i in range(11):
===     display.rect(0, 0, int(w_delta * i), int(h_delta * i), 1)
=== display.show()
=== time.sleep(2)
=== 
=== print("Text test")
=== display.fill(0)
=== display.text("hello world", 0, 0, 1)
=== display.text("this is the", 0, 8, 1)
=== display.text("CircuitPython", 0, 16, 1)
=== display.text("adafruit lib-", 0, 24, 1)
=== display.text("rary for the", 0, 32, 1)
=== display.text("PCD8544! :) ", 0, 40, 1)
=== 
=== display.show()
=== 
=== while True:
===     display.invert = True
===     time.sleep(0.5)
===     display.invert = False
===     time.sleep(0.5)
Pixel test
Lines test
Rectangle test
Text test
